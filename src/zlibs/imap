#!/usr/bin/env zsh
#
# Jaro Mail, your humble and faithful electronic postman
#
# a tool to easily and privately handle your e-mail communication
#
# Copyleft (C) 2010-2014 Denis Roio <jaromil@dyne.org>
#
# This source  code is free  software; you can redistribute  it and/or
# modify it under the terms of  the GNU Public License as published by
# the Free  Software Foundation; either  version 3 of the  License, or
# (at your option) any later version.
#
# This source code is distributed in  the hope that it will be useful,
# but  WITHOUT ANY  WARRANTY;  without even  the  implied warranty  of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# Please refer to the GNU Public License for more details.
#
# You should have received a copy of the GNU Public License along with
# this source code; if not, write to:
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

get_imap_info() {
    { test $name } || {
	error "get_imap_info() called with no account loaded"
	return 1 }
    { test "$type" != "imap" } && {
	error "get_imap_info() called on a non-imap account: $type.$host"
	return 1 }
    # skip getting size if Gmail
    # (imap there lacks support for RFC822.SIZE)
    { test "$host" = "imap.gmail.com" } && {
	act "skipping IMAP examination on GMail account"
	return 1 }
    func "Querying size on $type.$host"

    c=1
    tot=0
    grandtot=0
    imap_info=()
    typeset -alU ff
    id=$RANDOM
    query=$TMPDIR/imap.size.query.$id
    newlock $query
    if [ "$folders" = "" ]; then
	ff+=(INBOX)
    else # imap folders are explicit in conf
	for f in ${(s: :)folders}; do
	    # no composite works, one word each folder
	    ff+=($f); done
    fi

    for f in ${ff}; do
	rm -f $query; touch $query
	cat <<EOF >> $query
B00000 CAPABILITY
B00001 LOGIN "${login}" "${password}"
EOF
	
	c=$(( $c + 1 ))
        print "B0000$c SELECT \"${f}\"" >> $query
	c=$(( $c + 1 ))
        print "B0000$c FETCH 1:* (FLAGS RFC822.SIZE)" >> $query
	print >> $query

	typeset -al res
	for i in `timeout 5 openssl s_client -starttls imap -quiet \
	    -connect ${host}:${port}  < $query 2>&1 \
	    | grep RFC822.SIZE | awk '{ print $NF }' \
	    | tr -d '\r' | sed 's/)//'`; do
	    res+=($i); done

	{ test $? != 0 } && {
	    error "Error connecting to $host:$port"
	    continue }
	{ test "$res" = "" } && { 
	    act "Empty folder $f"
	    continue }

	for rr in ${res}; do
	    tot=$(( ($rr) + $tot ))
	done
	act "Folder $f has ${#res} messages (`human_size $tot`)"
	imap_info+=("$f;${#res};$tot")
	grandtot=$(( $grandtot + $tot ))
    done
    unlink $query
    imap_info+=($grandtot)
}
